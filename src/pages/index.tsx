import { AccountBarDropdown } from "@/components/AccountDropdown"
import { ChatHistory } from "@/components/ChatHistory"
import { Textarea } from "@/components/ui/TextArea"
import { env } from "@/env.mjs"
import { useIsClient } from "@/hooks/useIsClient"
import { type RouterInputs, trpc, type RouterOutputs } from "@/utils/api"
import { useSession } from "next-auth/react"
import Head from "next/head"
import { useRouter } from "next/navigation"
import Script from "next/script"
import Pusher from "pusher-js"
import { useEffect, useState } from "react"
import { type Message } from "@/components/ChatHistory"
type SendMessageInput = RouterInputs["pusher"]["sendMessage"]

function AccountBar() {
  return (
    <div
      className={`flex min-w-[75px] flex-col items-center gap-4 bg-gray-200`}
    >
      <AccountBarDropdown />
    </div>
  )
}

function FriendsBar() {
  return null
}

function ChatRoom() {
  const session = useSession()
  const router = useRouter()
  const isClient = useIsClient()
  const { mutate } = trpc.pusher.sendMessage.useMutation()
  const [messages, setMessages] = useState<Message[]>([])

  useEffect(() => {
    const pusher = new Pusher(env.NEXT_PUBLIC_PUSHER_KEY, {
      cluster: env.NEXT_PUBLIC_PUSHER_CLUSTER,
    })
    const channel = pusher.subscribe("hello-channel")
    const callback = ({ data }: RouterOutputs["pusher"]["sendMessage"]) => {
      setMessages((messages) => [
        ...messages,
        {
          from: data.from === session?.data?.user.id ? "ME" : "FRIEND",
          timestamp: data.timestamp,
          type: data.type,
          content: data.content,
        },
      ])
    }

    channel.bind("message", callback)
    return () => {
      channel.unbind("message", callback)
    }
  }, [session.data?.user.id])

  if (isClient && !session?.data) {
    void router.push("/signup")
  }

  function sendMesage({ ...input }: SendMessageInput) {
    mutate({
      ...input,
    })
  }
  return (
    <>
      <div className="flex flex-1 flex-col bg-gray-100">
        <div className="flex flex-1 flex-col">
          <ChatHistory messages={messages} />
        </div>
        <div className="m-2 flex h-24 bg-gray-500">
          <ChatInput sendMesage={sendMesage} />
        </div>
      </div>
    </>
  )
}

function ChatInput({
  sendMesage,
}: {
  sendMesage: (message: SendMessageInput) => void
}) {
  const session = useSession()
  const [newMessage, setNewMessage] = useState("")

  return (
    <Textarea
      className="h-full bg-gray-50 p-4"
      style={{ resize: "none" }}
      placeholder="Write a message"
      value={newMessage}
      onChange={(e) => {
        setNewMessage(e.target.value)
      }}
      onKeyUp={(e) => {
        if (e.key === "Enter") {
          sendMesage({
            from: session.data?.user.id ?? "",
            to: "hassan",
            channel: "hello-channel",
            content: newMessage,
          })
          setNewMessage("")
        }
      }}
    />
  )
}

export default function Home() {
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Script src="https://js.pusher.com/8.2.0/pusher.min.js" />
      <main className="flex min-h-screen flex-row">
        <AccountBar />
        <FriendsBar />
        <ChatRoom />
      </main>
    </>
  )
}
